!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_PROGRAM_AUTHOR	Darren Hiebert	/dhiebert@users.sourceforge.net/
!_TAG_PROGRAM_NAME	Exuberant Ctags	//
!_TAG_PROGRAM_URL	http://ctags.sourceforge.net	/official site/
!_TAG_PROGRAM_VERSION	5.5.4	//
ACLOCAL	Makefile	/^ACLOCAL = ${SHELL} \/home\/sapan\/fprobe-ulog-1.1\/missing --run aclocal-1.9$/;"	m
ACLOCAL_M4	Makefile	/^ACLOCAL_M4 = $(top_srcdir)\/aclocal.m4$/;"	m
AMDEP_FALSE	Makefile	/^AMDEP_FALSE = #$/;"	m
AMDEP_TRUE	Makefile	/^AMDEP_TRUE = $/;"	m
AMTAR	Makefile	/^AMTAR = ${SHELL} \/home\/sapan\/fprobe-ulog-1.1\/missing --run tar$/;"	m
AUTOCONF	Makefile	/^AUTOCONF = ${SHELL} \/home\/sapan\/fprobe-ulog-1.1\/missing --run autoconf$/;"	m
AUTOHEADER	Makefile	/^AUTOHEADER = ${SHELL} \/home\/sapan\/fprobe-ulog-1.1\/missing --run autoheader$/;"	m
AUTOMAKE	Makefile	/^AUTOMAKE = ${SHELL} \/home\/sapan\/fprobe-ulog-1.1\/missing --run automake-1.9$/;"	m
AWK	Makefile	/^AWK = gawk$/;"	m
BULK_QUANTITY	fprobe-ulog.c	149;"	d	file:
BULK_QUANTITY	fprobe-ulog.c	151;"	d	file:
BULK_QUANTITY_MAX	fprobe-ulog.c	147;"	d	file:
Bflag	fprobe-ulog.c	/^	Bflag,$/;"	e	file:
CAPTURE_SIZE	fprobe-ulog.h	22;"	d
CC	Makefile	/^CC = gcc$/;"	m
CCDEPMODE	Makefile	/^CCDEPMODE = depmode=none$/;"	m
CCLD	Makefile	/^CCLD = $(CC)$/;"	m
CDPATH	Makefile	/^am__cd = CDPATH="$${ZSH_VERSION+.}$(PATH_SEPARATOR)" && cd$/;"	m
CFLAGS	Makefile	/^CFLAGS = -g -O2 -D_BSD_SOURCE -D_REENTRANT -DWALL -W -Wall$/;"	m
COMPILE	Makefile	/^COMPILE = $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) \\$/;"	m
CONFIG_CLEAN_FILES	Makefile	/^CONFIG_CLEAN_FILES =$/;"	m
CONFIG_HEADER	Makefile	/^CONFIG_HEADER = $(top_builddir)\/config.h$/;"	m
COPY_INTO	fprobe-ulog.h	24;"	d
CPP	Makefile	/^CPP = gcc -E$/;"	m
CPPFLAGS	Makefile	/^CPPFLAGS = $/;"	m
CRC16_POLY	hash.h	42;"	d
CTAGS	Makefile	/^CTAGS = ctags$/;"	m
CYGPATH_W	Makefile	/^CYGPATH_W = echo$/;"	m
DATE	Makefile	/^DATE = 2007-10-26$/;"	m
DBG	common.h	13;"	d
DEBUG_C	common.h	18;"	d
DEBUG_E	common.h	24;"	d
DEBUG_F	common.h	28;"	d
DEBUG_I	common.h	30;"	d
DEBUG_M	common.h	26;"	d
DEBUG_S	common.h	22;"	d
DEBUG_U	common.h	20;"	d
DEFAULT_INCLUDES	Makefile	/^DEFAULT_INCLUDES = -I. -I$(srcdir) -I$(top_builddir)$/;"	m
DEFS	Makefile	/^DEFS = -DHAVE_CONFIG_H$/;"	m
DEPDIR	Makefile	/^DEPDIR = .deps$/;"	m
DISTFILES	Makefile	/^DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST)$/;"	m
DIST_COMMON	Makefile	/^DIST_COMMON = $(srcdir)\/Makefile.am $(srcdir)\/Makefile.in$/;"	m
DIST_SOURCES	Makefile	/^DIST_SOURCES = $(fprobe_ulog_SOURCES)$/;"	m
DIST_SUBDIRS	Makefile	/^DIST_SUBDIRS = $(SUBDIRS)$/;"	m
ECHO_C	Makefile	/^ECHO_C = $/;"	m
ECHO_N	Makefile	/^ECHO_N = -n$/;"	m
ECHO_T	Makefile	/^ECHO_T = $/;"	m
EGREP	Makefile	/^EGREP = grep -E$/;"	m
EMIT_TIMEOUT	fprobe-ulog.h	20;"	d
ETAGS	Makefile	/^ETAGS = etags$/;"	m
EXEEXT	Makefile	/^EXEEXT = $/;"	m
EXTRA_DIST	Makefile	/^EXTRA_DIST = ${man_MANS}$/;"	m
FLOW_FRAG	fprobe-ulog.h	65;"	d
FLOW_FRAGMASK	fprobe-ulog.h	66;"	d
FLOW_LASTFRAG	fprobe-ulog.h	68;"	d
FLOW_PENDING	fprobe-ulog.h	69;"	d
FLOW_TL	fprobe-ulog.h	67;"	d
Flow	fprobe-ulog.h	/^struct Flow {$/;"	s
FlowFields	netflow.h	/^	unsigned FlowFields;$/;"	m	struct:NetFlow
FlowFormat	netflow.h	/^	uint16_t *FlowFormat;$/;"	m	struct:NetFlow
FlowSize	netflow.h	/^	unsigned FlowSize;$/;"	m	struct:NetFlow
Flow_F	fprobe-ulog.h	/^struct Flow_F {$/;"	s
Flow_TL	fprobe-ulog.h	/^struct Flow_TL {$/;"	s
HeaderFields	netflow.h	/^	unsigned HeaderFields;$/;"	m	struct:NetFlow
HeaderFormat	netflow.h	/^	uint16_t *HeaderFormat;$/;"	m	struct:NetFlow
HeaderSize	netflow.h	/^	unsigned HeaderSize;$/;"	m	struct:NetFlow
INCLUDES	Makefile	/^INCLUDES = -I$(top_srcdir)\/src\/libipulog\/include$/;"	m
INSTALL	Makefile	/^INSTALL = \/bin\/install -c$/;"	m
INSTALL_DATA	Makefile	/^INSTALL_DATA = ${INSTALL} -m 644$/;"	m
INSTALL_HEADER	Makefile	/^INSTALL_HEADER = $(INSTALL_DATA)$/;"	m
INSTALL_PROGRAM	Makefile	/^	$(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \\$/;"	m
INSTALL_PROGRAM	Makefile	/^INSTALL_PROGRAM = ${INSTALL}$/;"	m
INSTALL_PROGRAM_ENV	Makefile	/^	    echo "INSTALL_PROGRAM_ENV=STRIPPROG='$(STRIP)'"` install$/;"	m
INSTALL_SCRIPT	Makefile	/^INSTALL_SCRIPT = ${INSTALL}$/;"	m
INSTALL_STRIP_FLAG	Makefile	/^	  install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \\$/;"	m
INSTALL_STRIP_PROGRAM	Makefile	/^INSTALL_STRIP_PROGRAM = ${SHELL} $(install_sh) -c -s$/;"	m
IP_OFFMASK	fprobe-ulog.h	16;"	d
LDFLAGS	Makefile	/^LDFLAGS = $/;"	m
LIBOBJS	Makefile	/^LIBOBJS = $/;"	m
LIBS	Makefile	/^LIBS = -lpthread $/;"	m
LINK	Makefile	/^LINK = $(CCLD) $(AM_CFLAGS) $(CFLAGS) $(AM_LDFLAGS) $(LDFLAGS) -o $@$/;"	m
LTLIBOBJS	Makefile	/^LTLIBOBJS = $/;"	m
MAKEINFO	Makefile	/^MAKEINFO = ${SHELL} \/home\/sapan\/fprobe-ulog-1.1\/missing --run makeinfo$/;"	m
MANS	Makefile	/^MANS = $(man_MANS)$/;"	m
MEM_THREADSAFE	mem.h	18;"	d
MOVE_INTO	fprobe-ulog.h	25;"	d
MY_GETOPT_ALLOW_REPEAT	my_getopt.h	15;"	d
MY_GETOPT_ARG_REQUIRED	my_getopt.h	13;"	d
MY_GETOPT_MAX_OPTSTR	my_getopt.h	17;"	d
MY_GETOPT_REQUIRED	my_getopt.h	14;"	d
MY_LOG_MAX_INDEX	my_log.h	16;"	d
MY_LOG_STDOUT	my_log.h	14;"	d
MY_LOG_SYSLOG	my_log.h	13;"	d
MY_LOG_SYSLOG_FACILITY	my_log.h	15;"	d
MaxFlows	netflow.h	/^	unsigned MaxFlows;$/;"	m	struct:NetFlow
Mem	mem.h	/^struct Mem {$/;"	s
Mflag	fprobe-ulog.c	/^	Mflag,$/;"	e	file:
NETFLOW1_FLOW_SIZE	netflow.h	215;"	d
NETFLOW1_HEADER_SIZE	netflow.h	213;"	d
NETFLOW1_MAX_FLOWS	netflow.h	214;"	d
NETFLOW1_SEQ_OFFSET	netflow.h	216;"	d
NETFLOW1_VERSION	netflow.h	212;"	d
NETFLOW5_FLOW_SIZE	netflow.h	221;"	d
NETFLOW5_HEADER_SIZE	netflow.h	219;"	d
NETFLOW5_MAX_FLOWS	netflow.h	220;"	d
NETFLOW5_SEQ_OFFSET	netflow.h	222;"	d
NETFLOW5_VERSION	netflow.h	218;"	d
NETFLOW7_FLOW_SIZE	netflow.h	227;"	d
NETFLOW7_HEADER_SIZE	netflow.h	225;"	d
NETFLOW7_MAX_FLOWS	netflow.h	226;"	d
NETFLOW7_SEQ_OFFSET	netflow.h	228;"	d
NETFLOW7_VERSION	netflow.h	224;"	d
NETFLOW8_MAX_FLOWS	netflow.h	231;"	d
NETFLOW8_VERSION	netflow.h	230;"	d
NETFLOW_BGP_IPV6_NEXT_HOP	netflow.h	159;"	d
NETFLOW_BGP_IPV6_NEXT_HOP_SIZE	netflow.h	160;"	d
NETFLOW_BGP_NEXT_HOP	netflow.h	66;"	d
NETFLOW_BGP_NEXT_HOP_SIZE	netflow.h	67;"	d
NETFLOW_BYTES_32	netflow.h	15;"	d
NETFLOW_BYTES_32_SIZE	netflow.h	16;"	d
NETFLOW_BYTES_64	netflow.h	81;"	d
NETFLOW_BYTES_64_SIZE	netflow.h	82;"	d
NETFLOW_COUNT	netflow.h	169;"	d
NETFLOW_COUNT_SIZE	netflow.h	170;"	d
NETFLOW_DIRECTION	netflow.h	153;"	d
NETFLOW_DIRECTION_SIZE	netflow.h	154;"	d
NETFLOW_DST_AS	netflow.h	63;"	d
NETFLOW_DST_AS_SIZE	netflow.h	64;"	d
NETFLOW_DST_MASK	netflow.h	51;"	d
NETFLOW_DST_MASK_SIZE	netflow.h	52;"	d
NETFLOW_ENGINE_ID	netflow.h	129;"	d
NETFLOW_ENGINE_ID_SIZE	netflow.h	130;"	d
NETFLOW_ENGINE_TYPE	netflow.h	126;"	d
NETFLOW_ENGINE_TYPE_SIZE	netflow.h	127;"	d
NETFLOW_FIRST_SWITCHED	netflow.h	78;"	d
NETFLOW_FIRST_SWITCHED_SIZE	netflow.h	79;"	d
NETFLOW_FLAGS7_1	netflow.h	187;"	d
NETFLOW_FLAGS7_1_SIZE	netflow.h	188;"	d
NETFLOW_FLAGS7_2	netflow.h	190;"	d
NETFLOW_FLAGS7_2_SIZE	netflow.h	191;"	d
NETFLOW_FLOWS	netflow.h	21;"	d
NETFLOW_FLOWS_SIZE	netflow.h	22;"	d
NETFLOW_FLOW_ACTIVE_TIMEOUT	netflow.h	120;"	d
NETFLOW_FLOW_ACTIVE_TIMEOUT_SIZE	netflow.h	121;"	d
NETFLOW_FLOW_INACTIVE_TIMEOUT	netflow.h	123;"	d
NETFLOW_FLOW_INACTIVE_TIMEOUT_SIZE	netflow.h	124;"	d
NETFLOW_FLOW_LABEL	netflow.h	105;"	d
NETFLOW_FLOW_LABEL_SZIE	netflow.h	106;"	d
NETFLOW_FLOW_SAMPLER_ID	netflow.h	141;"	d
NETFLOW_FLOW_SAMPLER_ID_SIZE	netflow.h	142;"	d
NETFLOW_FLOW_SAMPLER_MODE	netflow.h	144;"	d
NETFLOW_FLOW_SAMPLER_MODE_SIZE	netflow.h	145;"	d
NETFLOW_FLOW_SAMPLER_RANDOM_INTERVAL	netflow.h	147;"	d
NETFLOW_FLOW_SAMPLER_RANDOM_INTERVAL_SIZE	netflow.h	148;"	d
NETFLOW_FLOW_SEQUENCE	netflow.h	181;"	d
NETFLOW_FLOW_SEQUENCE_SIZE	netflow.h	182;"	d
NETFLOW_HEADER_SAMPLING_INTERVAL	netflow.h	184;"	d
NETFLOW_HEADER_SAMPLING_INTERVAL_SIZE	netflow.h	185;"	d
NETFLOW_ICMP_TYPE	netflow.h	108;"	d
NETFLOW_ICMP_TYPE_SIZE	netflow.h	109;"	d
NETFLOW_INPUT_SNMP	netflow.h	42;"	d
NETFLOW_INPUT_SNMP_SIZE	netflow.h	43;"	d
NETFLOW_IPM_DOCTETS	netflow.h	72;"	d
NETFLOW_IPM_DOCTETS_SIZE	netflow.h	73;"	d
NETFLOW_IPM_DPKTS	netflow.h	69;"	d
NETFLOW_IPM_DPKTS_SIZE	netflow.h	70;"	d
NETFLOW_IPV4_DST_ADDR	netflow.h	48;"	d
NETFLOW_IPV4_DST_ADDR_SIZE	netflow.h	49;"	d
NETFLOW_IPV4_NEXT_HOP	netflow.h	57;"	d
NETFLOW_IPV4_NEXT_HOP_SIZE	netflow.h	58;"	d
NETFLOW_IPV4_SRC_ADDR	netflow.h	36;"	d
NETFLOW_IPV4_SRC_ADDR_SIZE	netflow.h	37;"	d
NETFLOW_IPV6_DST_ADDR	netflow.h	96;"	d
NETFLOW_IPV6_DST_ADDR_SIZE	netflow.h	97;"	d
NETFLOW_IPV6_DST_MASK	netflow.h	102;"	d
NETFLOW_IPV6_DST_MASK_SIZE	netflow.h	103;"	d
NETFLOW_IPV6_NEXT_HOP	netflow.h	156;"	d
NETFLOW_IPV6_NEXT_HOP_SIZE	netflow.h	157;"	d
NETFLOW_IPV6_OPTION_HEADERS	netflow.h	162;"	d
NETFLOW_IPV6_OPTION_HEADERS_SIZE	netflow.h	163;"	d
NETFLOW_IPV6_SRC_ADDR	netflow.h	93;"	d
NETFLOW_IPV6_SRC_ADDR_SIZE	netflow.h	94;"	d
NETFLOW_IPV6_SRC_MASK	netflow.h	99;"	d
NETFLOW_IPV6_SRC_MASK_SIZE	netflow.h	100;"	d
NETFLOW_IP_PROTOCOL_VERSION	netflow.h	150;"	d
NETFLOW_IP_PROTOCOL_VERSION_SIZE	netflow.h	151;"	d
NETFLOW_L4_DST_PORT	netflow.h	45;"	d
NETFLOW_L4_DST_PORT_SIZE	netflow.h	46;"	d
NETFLOW_L4_SRC_PORT	netflow.h	33;"	d
NETFLOW_L4_SRC_PORT_SIZE	netflow.h	34;"	d
NETFLOW_LAST_SWITCHED	netflow.h	75;"	d
NETFLOW_LAST_SWITCHED_SIZE	netflow.h	76;"	d
NETFLOW_MAC_ADDR	netflow.h	87;"	d
NETFLOW_MAC_ADDR_SIZE	netflow.h	88;"	d
NETFLOW_MAX_PACKET	netflow.h	210;"	d
NETFLOW_MUL_IGMP_TYPE	netflow.h	111;"	d
NETFLOW_MUL_IGMP_TYPE_SIZE	netflow.h	112;"	d
NETFLOW_OUTPUT_SNMP	netflow.h	54;"	d
NETFLOW_OUTPUT_SNMP_SIZE	netflow.h	55;"	d
NETFLOW_PAD16	netflow.h	200;"	d
NETFLOW_PAD16_SIZE	netflow.h	201;"	d
NETFLOW_PAD32	netflow.h	203;"	d
NETFLOW_PAD32_SIZE	netflow.h	204;"	d
NETFLOW_PAD64	netflow.h	206;"	d
NETFLOW_PAD64_SIZE	netflow.h	207;"	d
NETFLOW_PAD8	netflow.h	197;"	d
NETFLOW_PAD8_SIZE	netflow.h	198;"	d
NETFLOW_PKTS_32	netflow.h	18;"	d
NETFLOW_PKTS_32_SIZE	netflow.h	19;"	d
NETFLOW_PKTS_64	netflow.h	84;"	d
NETFLOW_PKTS_64_SIZE	netflow.h	85;"	d
NETFLOW_PROT	netflow.h	24;"	d
NETFLOW_PROT_SIZE	netflow.h	25;"	d
NETFLOW_ROUTER_SC	netflow.h	193;"	d
NETFLOW_ROUTER_SC_SIZE	netflow.h	194;"	d
NETFLOW_SAMPLING_ALGORITHM	netflow.h	117;"	d
NETFLOW_SAMPLING_ALGORITHM_SIZE	netflow.h	118;"	d
NETFLOW_SAMPLING_INTERVAL	netflow.h	114;"	d
NETFLOW_SAMPLING_INTERVAL_SIZE	netflow.h	115;"	d
NETFLOW_SRC_AS	netflow.h	60;"	d
NETFLOW_SRC_AS_SIZE	netflow.h	61;"	d
NETFLOW_SRC_MASK	netflow.h	39;"	d
NETFLOW_SRC_MASK_SIZE	netflow.h	40;"	d
NETFLOW_SRC_TOS	netflow.h	27;"	d
NETFLOW_SRC_TOS_SIZE	netflow.h	28;"	d
NETFLOW_TCP_FLAGS	netflow.h	30;"	d
NETFLOW_TCP_FLAGS_SIZE	netflow.h	31;"	d
NETFLOW_TOTAL_BYTES_EXPORTED	netflow.h	132;"	d
NETFLOW_TOTAL_BYTES_EXPORTED_SIZE	netflow.h	133;"	d
NETFLOW_TOTAL_EXPORT_PKTS_SENT	netflow.h	135;"	d
NETFLOW_TOTAL_EXPORT_PKTS_SENT_SIZE	netflow.h	136;"	d
NETFLOW_TOTAL_FLOWS_EXPORTED	netflow.h	138;"	d
NETFLOW_TOTAL_FLOWS_EXPORTED_SIZE	netflow.h	139;"	d
NETFLOW_UNIX_NSECS	netflow.h	178;"	d
NETFLOW_UNIX_NSECS_SIZE	netflow.h	179;"	d
NETFLOW_UNIX_SECS	netflow.h	175;"	d
NETFLOW_UNIX_SECS_SIZE	netflow.h	176;"	d
NETFLOW_UPTIME	netflow.h	172;"	d
NETFLOW_UPTIME_SIZE	netflow.h	173;"	d
NETFLOW_VERSION	netflow.h	166;"	d
NETFLOW_VERSION_SIZE	netflow.h	167;"	d
NETFLOW_VLAN_ID	netflow.h	90;"	d
NETFLOW_VLAN_ID_SIZE	netflow.h	91;"	d
NORMAL_INSTALL	Makefile	/^NORMAL_INSTALL = :$/;"	m
NORMAL_UNINSTALL	Makefile	/^NORMAL_UNINSTALL = :$/;"	m
NROFF	Makefile	/^NROFF = nroff$/;"	m
NetFlow	netflow.h	/^struct NetFlow {$/;"	s
NetFlow1	netflow.c	/^struct NetFlow NetFlow1 = {$/;"	v
NetFlow1_Flow	netflow.c	/^static uint16_t NetFlow1_Flow[] = {$/;"	v	file:
NetFlow1_Header	netflow.c	/^static uint16_t NetFlow1_Header[] = {$/;"	v	file:
NetFlow5	netflow.c	/^struct NetFlow NetFlow5 = {$/;"	v
NetFlow5_Flow	netflow.c	/^static uint16_t NetFlow5_Flow[] = {$/;"	v	file:
NetFlow5_Header	netflow.c	/^static uint16_t NetFlow5_Header[] = {$/;"	v	file:
NetFlow7	netflow.c	/^struct NetFlow NetFlow7 = {$/;"	v
NetFlow7_Flow	netflow.c	/^static uint16_t NetFlow7_Flow[] = {$/;"	v	file:
NetFlow7_Header	netflow.c	/^static uint16_t NetFlow7_Header[] = {$/;"	v	file:
OBJEXT	Makefile	/^OBJEXT = o$/;"	m
PACKAGE	Makefile	/^PACKAGE = fprobe-ulog$/;"	m
PACKAGE_BUGREPORT	Makefile	/^PACKAGE_BUGREPORT = $/;"	m
PACKAGE_NAME	Makefile	/^PACKAGE_NAME = $/;"	m
PACKAGE_STRING	Makefile	/^PACKAGE_STRING = $/;"	m
PACKAGE_TARNAME	Makefile	/^PACKAGE_TARNAME = $/;"	m
PACKAGE_VERSION	Makefile	/^PACKAGE_VERSION = $/;"	m
PATH_SEPARATOR	Makefile	/^PATH_SEPARATOR = :$/;"	m
PEER_MIRROR	fprobe-ulog.h	126;"	d
PEER_ROTATE	fprobe-ulog.h	127;"	d
POST_INSTALL	Makefile	/^POST_INSTALL = :$/;"	m
POST_UNINSTALL	Makefile	/^POST_UNINSTALL = :$/;"	m
PRE_INSTALL	Makefile	/^PRE_INSTALL = :$/;"	m
PRE_UNINSTALL	Makefile	/^PRE_UNINSTALL = :$/;"	m
PROGRAMS	Makefile	/^PROGRAMS = $(sbin_PROGRAMS)$/;"	m
RANLIB	Makefile	/^RANLIB = ranlib$/;"	m
RECURSIVE_TARGETS	Makefile	/^RECURSIVE_TARGETS = all-recursive check-recursive dvi-recursive \\$/;"	m
RNDDEV	hash.h	45;"	d
SCHED	fprobe-ulog.h	19;"	d
SET_MAKE	Makefile	/^SET_MAKE = $/;"	m
SHELL	Makefile	/^SHELL = \/bin\/sh$/;"	m
SIGALRM_MASK	fprobe-ulog.h	108;"	d
SIGTERM_MASK	fprobe-ulog.h	109;"	d
SIGUSR1_MASK	fprobe-ulog.h	110;"	d
SOURCES	Makefile	/^SOURCES = $(fprobe_ulog_SOURCES)$/;"	m
STRIP	Makefile	/^STRIP = $/;"	m
STRIPPROG	Makefile	/^	    echo "INSTALL_PROGRAM_ENV=STRIPPROG='$(STRIP)'"` install$/;"	m
SUBDIRS	Makefile	/^SUBDIRS = libipulog$/;"	m
SeqOffset	netflow.h	/^	unsigned SeqOffset;$/;"	m	struct:NetFlow
THREADS	fprobe-ulog.h	23;"	d
Time	fprobe-ulog.h	/^struct Time {$/;"	s
UNPENDING_TIMEOUT	fprobe-ulog.h	21;"	d
Uflag	fprobe-ulog.c	/^	Uflag,$/;"	e	file:
VERSION	Makefile	/^VERSION = 1.1$/;"	m
Version	netflow.h	/^	unsigned Version;$/;"	m	struct:NetFlow
Xflag	fprobe-ulog.c	/^	Xflag,$/;"	e	file:
_COMMON_H_	common.h	11;"	d
_FPROBE_ULOG_H_	fprobe-ulog.h	11;"	d
_HASH_H_	hash.h	11;"	d
_MEM_H_	mem.h	11;"	d
_MY_GETOPT_H_	my_getopt.h	11;"	d
_MY_INTTYPES_H_	my_inttypes.h	11;"	d
_MY_LOG_H_	my_log.h	11;"	d
_NETFLOW_H_	netflow.h	11;"	d
ac_ct_CC	Makefile	/^ac_ct_CC = gcc$/;"	m
ac_ct_RANLIB	Makefile	/^ac_ct_RANLIB = ranlib$/;"	m
ac_ct_STRIP	Makefile	/^ac_ct_STRIP = $/;"	m
active_lifetime	fprobe-ulog.c	/^static int active_lifetime = 300;$/;"	v	file:
addr	fprobe-ulog.h	/^	struct sockaddr_in addr;$/;"	m	struct:peer
aflag	fprobe-ulog.c	/^	aflag,$/;"	e	file:
am__aclocal_m4_deps	Makefile	/^am__aclocal_m4_deps = $(top_srcdir)\/configure.in$/;"	m
am__cd	Makefile	/^am__cd = CDPATH="$${ZSH_VERSION+.}$(PATH_SEPARATOR)" && cd$/;"	m
am__configure_deps	Makefile	/^am__configure_deps = $(am__aclocal_m4_deps) $(CONFIGURE_DEPENDENCIES) \\$/;"	m
am__depfiles_maybe	Makefile	/^am__depfiles_maybe =$/;"	m
am__fastdepCC_FALSE	Makefile	/^am__fastdepCC_FALSE = $/;"	m
am__fastdepCC_TRUE	Makefile	/^am__fastdepCC_TRUE = #$/;"	m
am__include	Makefile	/^am__include = include$/;"	m
am__installdirs	Makefile	/^am__installdirs = "$(DESTDIR)$(sbindir)" "$(DESTDIR)$(man8dir)"$/;"	m
am__leading_dot	Makefile	/^am__leading_dot = .$/;"	m
am__quote	Makefile	/^am__quote = $/;"	m
am__tar	Makefile	/^am__tar = ${AMTAR} chof - "$$tardir"$/;"	m
am__untar	Makefile	/^am__untar = ${AMTAR} xf -$/;"	m
am_fprobe_ulog_OBJECTS	Makefile	/^am_fprobe_ulog_OBJECTS = fprobe-ulog.$(OBJEXT) netflow.$(OBJEXT) \\$/;"	m
amf	Makefile	/^	@set fnord $$MAKEFLAGS; amf=$$2; \\$/;"	m
arg	my_getopt.h	/^	char *arg;$/;"	m	struct:getopt_parms
base	fprobe-ulog.h	/^	int base;$/;"	m	struct:snmp_rule
basename	fprobe-ulog.h	/^	char basename[IFNAMSIZ];$/;"	m	struct:snmp_rule
bflag	fprobe-ulog.c	/^	bflag,$/;"	e	file:
bindir	Makefile	/^bindir = ${exec_prefix}\/bin$/;"	m
blocking	fprobe-ulog.c	/^	u_int8_t blocking;$/;"	m	struct:ipulog_handle	file:
build	Makefile	/^build = i686-pc-linux-gnu$/;"	m
build_alias	Makefile	/^build_alias = $/;"	m
build_cpu	Makefile	/^build_cpu = i686$/;"	m
build_os	Makefile	/^build_os = linux-gnu$/;"	m
build_triplet	Makefile	/^build_triplet = i686-pc-linux-gnu$/;"	m
build_vendor	Makefile	/^build_vendor = pc$/;"	m
bulk_quantity	fprobe-ulog.c	/^static unsigned bulk_quantity = BULK_QUANTITY;$/;"	v	file:
bulk_quantity	mem.c	/^static unsigned int bulk_quantity;$/;"	v	file:
cap_buf	fprobe-ulog.c	/^static char *cap_buf;$/;"	v	file:
cap_thread	fprobe-ulog.c	/^void *cap_thread()$/;"	f
cflag	fprobe-ulog.c	/^	cflag,$/;"	e	file:
cmpmtime	fprobe-ulog.c	/^inline time_t cmpmtime(struct Time *t1, struct Time *t2)$/;"	f
copy_flow	fprobe-ulog.c	/^inline void copy_flow(struct Flow *src, struct Flow *dst)$/;"	f
count	my_getopt.h	/^	int count;$/;"	m	struct:getopt_parms
crc16	hash.c	/^uint16_t crc16(uint16_t crc, uint8_t val)$/;"	f
crc16_poly	hash.c	/^static uint16_t crc16_poly;$/;"	v	file:
crc16_table	hash.c	/^static uint16_t crc16_table[256];$/;"	v	file:
ctime	fprobe-ulog.h	/^	struct Time ctime;$/;"	m	struct:Flow
datadir	Makefile	/^datadir = ${prefix}\/share$/;"	m
depcomp	Makefile	/^depcomp =$/;"	m
depmode	Makefile	/^CCDEPMODE = depmode=none$/;"	m
dflag	fprobe-ulog.c	/^	dflag,$/;"	e	file:
dip	fprobe-ulog.h	/^	struct in_addr dip;$/;"	m	struct:Flow
dip	fprobe-ulog.h	/^	struct in_addr dip;$/;"	m	struct:Flow_F
dip	fprobe-ulog.h	/^	struct in_addr dip;$/;"	m	struct:Flow_TL
dir	Makefile	/^	    dir="\/$$dir"; \\$/;"	m
dir	Makefile	/^	    dir=''; \\$/;"	m
dir	Makefile	/^	  dir=`echo "$$file" | sed -e 's,\/[^\/]*$$,,'`; \\$/;"	m
distdir	Makefile	/^	        distdir="$$distdir\/$$subdir" \\$/;"	m
distdir	Makefile	/^	    distdir=`$(am__cd) $(distdir) && pwd`; \\$/;"	m
dot_seen	Makefile	/^	    dot_seen=yes; \\$/;"	m
dot_seen	Makefile	/^	dot_seen=no; \\$/;"	m
dp	fprobe-ulog.h	/^	uint16_t dp;$/;"	m	struct:Flow
dp	fprobe-ulog.h	/^	uint16_t dp;$/;"	m	struct:Flow_TL
eflag	fprobe-ulog.c	/^	eflag,$/;"	e	file:
element_size	mem.c	/^static unsigned int element_size;$/;"	v	file:
element_table_size	mem.c	/^static unsigned int element_table_size;$/;"	v	file:
emit_cond	fprobe-ulog.c	/^static pthread_cond_t emit_cond = PTHREAD_COND_INITIALIZER;$/;"	v	file:
emit_count	fprobe-ulog.c	/^static unsigned emit_count;$/;"	v	file:
emit_mutex	fprobe-ulog.c	/^static pthread_mutex_t emit_mutex = PTHREAD_MUTEX_INITIALIZER;$/;"	v	file:
emit_packet	fprobe-ulog.c	/^static uint8_t emit_packet[NETFLOW_MAX_PACKET];$/;"	v	file:
emit_pkts	fprobe-ulog.c	/^static unsigned emit_pkts, emit_queue;$/;"	v	file:
emit_queue	fprobe-ulog.c	/^static unsigned emit_pkts, emit_queue;$/;"	v	file:
emit_rate_bytes	fprobe-ulog.c	/^static unsigned emit_rate_bytes, emit_rate_delay;$/;"	v	file:
emit_rate_delay	fprobe-ulog.c	/^static unsigned emit_rate_bytes, emit_rate_delay;$/;"	v	file:
emit_sequence	fprobe-ulog.c	/^static uint32_t emit_sequence;$/;"	v	file:
emit_thread	fprobe-ulog.c	/^void *emit_thread()$/;"	f
emit_time	fprobe-ulog.c	/^static struct Time emit_time;$/;"	v	file:
emit_timeout	fprobe-ulog.c	/^static int emit_timeout = EMIT_TIMEOUT, unpending_timeout = UNPENDING_TIMEOUT;$/;"	v	file:
empty_fix	Makefile	/^	  empty_fix=.; \\$/;"	m
empty_fix	Makefile	/^	  empty_fix=; \\$/;"	m
exec_prefix	Makefile	/^exec_prefix = ${prefix}$/;"	m
ext	Makefile	/^	    *) ext='8' ;; \\$/;"	m
ext	Makefile	/^	  ext=`echo $$i | sed -e 's\/^.*\\\\.\/\/'`; \\$/;"	m
f	Makefile	/^	    f=`echo "$$p1" | sed 's,^.*\/,,;$(transform);s\/$$\/$(EXEEXT)\/'`; \\$/;"	m
f	Makefile	/^	  f=`echo "$$p" | sed 's,^.*\/,,;s\/$(EXEEXT)$$\/\/;$(transform);s\/$$\/$(EXEEXT)\/'`; \\$/;"	m
fail	Makefile	/^	   || case "$$amf" in *=*) exit 1;; *k*) fail=yes;; *) exit 1;; esac; \\$/;"	m
fd	fprobe-ulog.c	/^	int fd;$/;"	m	struct:ipulog_handle	file:
file	Makefile	/^	    $(srcdir)\/*) file=`echo "$$file" | sed "s|^$$srcdirstrip\/||"`;; \\$/;"	m
file	Makefile	/^	    $(top_srcdir)\/*) file=`echo "$$file" | sed "s|^$$topsrcdirstrip\/|$(top_builddir)\/|"`;; \\$/;"	m
fill	fprobe-ulog.c	/^void *fill(int fields, uint16_t *format, struct Flow *flow, void *p)$/;"	f
find	fprobe-ulog.c	/^struct Flow *find(struct Flow *where, struct Flow *what, struct Flow ***prev)$/;"	f
first	mem.h	/^	void *first;$/;"	m	struct:Mem
flag	my_getopt.h	/^	int flag;$/;"	m	struct:getopt_parms
flags	fprobe-ulog.h	/^	int flags;$/;"	m	struct:Flow
flows	fprobe-ulog.c	/^static struct Flow *flows[1 << HASH_BITS];$/;"	v	file:
flows_emit	fprobe-ulog.c	/^static struct Flow *flows_emit;$/;"	v	file:
flows_fragmented	fprobe-ulog.c	/^static unsigned flows_total, flows_fragmented;$/;"	v	file:
flows_mutex	fprobe-ulog.c	/^static pthread_mutex_t flows_mutex[1 << HASH_BITS];$/;"	v	file:
flows_total	fprobe-ulog.c	/^static unsigned flows_total, flows_fragmented;$/;"	v	file:
fprobe_ulog_DEPENDENCIES	Makefile	/^fprobe_ulog_DEPENDENCIES = libipulog\/libipulog.a$/;"	m
fprobe_ulog_LDADD	Makefile	/^fprobe_ulog_LDADD = libipulog\/libipulog.a$/;"	m
fprobe_ulog_OBJECTS	Makefile	/^fprobe_ulog_OBJECTS = $(am_fprobe_ulog_OBJECTS)$/;"	m
fprobe_ulog_SOURCES	Makefile	/^fprobe_ulog_SOURCES = fprobe-ulog.c fprobe-ulog.h \\$/;"	m
frag_lifetime	fprobe-ulog.c	/^static int frag_lifetime = 30;$/;"	v	file:
free	mem.h	/^	unsigned int free;$/;"	m	struct:Mem
free_elements	mem.c	/^unsigned int free_elements;$/;"	v
getopt_parms	my_getopt.h	/^struct getopt_parms {$/;"	s
gettime	fprobe-ulog.c	/^void gettime(struct Time *now)$/;"	f
getuptime	fprobe-ulog.c	/^uint32_t getuptime(struct Time *t)$/;"	f
gflag	fprobe-ulog.c	/^	gflag,$/;"	e	file:
hash	hash.c	/^hash_t hash(void *p, int size)$/;"	f
hash_flow	fprobe-ulog.c	/^hash_t hash_flow(struct Flow *flow)$/;"	f
hash_init	hash.c	/^void hash_init()$/;"	f
hash_t	hash.h	/^typedef uint16_t hash_t;$/;"	t
hash_t	hash.h	/^typedef uint8_t hash_t;$/;"	t
here	Makefile	/^	here=`$(am__cd) $(top_builddir) && pwd` \\$/;"	m
here	Makefile	/^	here=`pwd`; \\$/;"	m
hflag	fprobe-ulog.c	/^	hflag,$/;"	e	file:
host	Makefile	/^host = i686-pc-linux-gnu$/;"	m
host_alias	Makefile	/^host_alias = $/;"	m
host_cpu	Makefile	/^host_cpu = i686$/;"	m
host_os	Makefile	/^host_os = linux-gnu$/;"	m
host_triplet	Makefile	/^host_triplet = i686-pc-linux-gnu$/;"	m
host_vendor	Makefile	/^host_vendor = pc$/;"	m
id	fprobe-ulog.h	/^	uint16_t id;$/;"	m	struct:Flow
id	fprobe-ulog.h	/^	uint16_t id;$/;"	m	struct:Flow_F
id	fprobe-ulog.h	/^	uint16_t id;$/;"	m	struct:Flow_TL
ident	fprobe-ulog.c	/^static char ident[256] = "fprobe-ulog";$/;"	v	file:
iif	fprobe-ulog.h	/^	uint16_t iif;$/;"	m	struct:Flow
iif	fprobe-ulog.h	/^	uint16_t iif;$/;"	m	struct:Flow_F
iif	fprobe-ulog.h	/^	uint16_t iif;$/;"	m	struct:Flow_TL
ile	Makefile	/^	  else file=$$i; fi; \\$/;"	m
ile	Makefile	/^	  if test -f $(srcdir)\/$$i; then file=$(srcdir)\/$$i; \\$/;"	m
inactive_lifetime	fprobe-ulog.c	/^static int inactive_lifetime = 60;$/;"	v	file:
include_option	Makefile	/^	  include_option=--etags-include; \\$/;"	m
include_option	Makefile	/^	  include_option=--include; \\$/;"	m
includedir	Makefile	/^includedir = ${prefix}\/include$/;"	m
info_debug	fprobe-ulog.c	/^void info_debug()$/;"	f
infodir	Makefile	/^infodir = ${prefix}\/info$/;"	m
inst	Makefile	/^	  inst=`echo $$i | sed -e 's\/\\\\.[0-9a-z]*$$\/\/'`; \\$/;"	m
inst	Makefile	/^	  inst=`echo $$inst | sed '$(transform)'`.$$ext; \\$/;"	m
inst	Makefile	/^	  inst=`echo $$inst | sed -e 's\/^.*\\\/\/\/'`; \\$/;"	m
install_sh	Makefile	/^install_sh = \/home\/sapan\/fprobe-ulog-1.1\/install-sh$/;"	m
install_sh_DATA	Makefile	/^install_sh_DATA = $(install_sh) -c -m 644$/;"	m
install_sh_PROGRAM	Makefile	/^	  install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \\$/;"	m
install_sh_PROGRAM	Makefile	/^install_sh_PROGRAM = $(install_sh) -c$/;"	m
install_sh_SCRIPT	Makefile	/^install_sh_SCRIPT = $(install_sh) -c$/;"	m
int16_t	my_inttypes.h	/^typedef short int16_t;$/;"	t
int32_t	my_inttypes.h	/^typedef int int32_t;$/;"	t
int32_t	my_inttypes.h	/^typedef long int32_t;$/;"	t
int64_t	my_inttypes.h	/^typedef long int64_t;$/;"	t
int64_t	my_inttypes.h	/^typedef long long int64_t;$/;"	t
int8_t	my_inttypes.h	/^typedef signed char int8_t;$/;"	t
ipulog_handle	fprobe-ulog.c	/^struct ipulog_handle {$/;"	s	file:
killed	fprobe-ulog.c	/^static int killed;$/;"	v	file:
l2	Makefile	/^	l2='$(man_MANS) $(dist_man_MANS) $(nodist_man_MANS)'; \\$/;"	m
laddr	fprobe-ulog.h	/^	struct sockaddr_in laddr;$/;"	m	struct:peer
last	mem.h	/^	void *last;$/;"	m	struct:Mem
last_nlhdr	fprobe-ulog.c	/^	struct nlmsghdr* last_nlhdr;$/;"	m	struct:ipulog_handle	file:
len	fprobe-ulog.h	/^	int len;$/;"	m	struct:snmp_rule
lflag	fprobe-ulog.c	/^	lflag,$/;"	e	file:
libdir	Makefile	/^libdir = ${exec_prefix}\/lib$/;"	m
libexecdir	Makefile	/^libexecdir = ${exec_prefix}\/libexec$/;"	m
limit_memory	mem.c	/^static unsigned int limit_memory;$/;"	v	file:
list	Makefile	/^	    *.8*) list="$$list $$i" ;; \\$/;"	m
list	Makefile	/^	  *) list='$(SUBDIRS)' ;; \\$/;"	m
list	Makefile	/^	  distclean-* | maintainer-clean-*) list='$(DIST_SUBDIRS)' ;; \\$/;"	m
list	Makefile	/^	list='$(DISTFILES)'; for file in $$list; do \\$/;"	m
list	Makefile	/^	list='$(DIST_SUBDIRS)'; for subdir in $$list; do \\$/;"	m
list	Makefile	/^	list='$(SOURCES) $(HEADERS)  $(LISP) $(TAGS_FILES)'; \\$/;"	m
list	Makefile	/^	list='$(SOURCES) $(HEADERS) $(LISP) $(TAGS_FILES)'; \\$/;"	m
list	Makefile	/^	list='$(SUBDIRS)'; for subdir in $$list; do \\$/;"	m
local	fprobe-ulog.c	/^	struct sockaddr_nl local;$/;"	m	struct:ipulog_handle	file:
local_target	Makefile	/^	    local_target="$$target"; \\$/;"	m
local_target	Makefile	/^	    local_target="$$target-am"; \\$/;"	m
localstatedir	Makefile	/^localstatedir = ${prefix}\/var$/;"	m
log_dest	fprobe-ulog.c	/^static unsigned log_dest = MY_LOG_SYSLOG;$/;"	v	file:
main	fprobe-ulog.c	/^int main(int argc, char **argv)$/;"	f
malloc_size	mem.c	/^static unsigned int malloc_size;$/;"	v	file:
man8dir	Makefile	/^man8dir = $(mandir)\/man8$/;"	m
man_MANS	Makefile	/^man_MANS = fprobe-ulog.8$/;"	m
mandir	Makefile	/^mandir = ${prefix}\/man$/;"	m
mark_is_tos	fprobe-ulog.c	141;"	d	file:
mem_alloc	mem.c	/^void *mem_alloc()$/;"	f
mem_free	mem.c	/^void mem_free(void *eptr)$/;"	f
mem_index_t	mem.h	/^typedef uint16_t mem_index_t;$/;"	t
mem_index_t	mem.h	/^typedef uint8_t mem_index_t;$/;"	t
mem_index_t	mem.h	/^typedef void* mem_index_t;$/;"	t
mem_index_table_size	mem.c	/^static unsigned int mem_index_table_size;$/;"	v	file:
mem_init	mem.c	/^int mem_init(unsigned int element, unsigned int bulk, unsigned int limit)$/;"	f
mem_mutex	mem.c	/^static pthread_mutex_t mem_mutex = PTHREAD_MUTEX_INITIALIZER;$/;"	v	file:
mflag	fprobe-ulog.c	/^	mflag,$/;"	e	file:
mkdir_p	Makefile	/^mkdir_p = mkdir -p --$/;"	m
mkinstalldirs	Makefile	/^mkinstalldirs = $(SHELL) $(top_srcdir)\/mkinstalldirs$/;"	m
mtime	fprobe-ulog.h	/^	struct Time mtime;$/;"	m	struct:Flow
my_getopt	my_getopt.c	/^int my_getopt(int argc, char * const argv[],$/;"	f
my_log	my_log.c	/^void my_log(unsigned level, const char *format, ...)$/;"	f
my_log_close	my_log.c	/^void my_log_close(void)$/;"	f
my_log_flags	my_log.c	/^static unsigned my_log_flags;$/;"	v	file:
my_log_indent	my_log.c	/^static char *my_log_indent;$/;"	v	file:
my_log_min_level	my_log.c	/^static unsigned my_log_min_level;$/;"	v	file:
my_log_names	my_log.c	/^static char *my_log_names[] = {$/;"	v	file:
my_log_open	my_log.c	/^void my_log_open(char *indent, unsigned min_level, unsigned flags)$/;"	f
name	my_getopt.h	/^	char name;$/;"	m	struct:getopt_parms
netflow	fprobe-ulog.c	/^static struct NetFlow *netflow = &NetFlow5;$/;"	v	file:
next	fprobe-ulog.h	/^	struct Flow *next;$/;"	m	struct:Flow
next	mem.h	/^	struct Mem *next;$/;"	m	struct:Mem
nflag	fprobe-ulog.c	/^	nflag,$/;"	e	file:
npeers	fprobe-ulog.c	/^static int npeers, npeers_rot;$/;"	v	file:
npeers_rot	fprobe-ulog.c	/^static int npeers, npeers_rot;$/;"	v	file:
nsnmp_rules	fprobe-ulog.c	/^static int nsnmp_rules;$/;"	v	file:
off_tl	fprobe-ulog.c	/^static int off_tl;$/;"	v	file:
oif	fprobe-ulog.h	/^	uint16_t oif;$/;"	m	struct:Flow
oif	fprobe-ulog.h	/^	uint16_t oif;$/;"	m	struct:Flow_F
oif	fprobe-ulog.h	/^	uint16_t oif;$/;"	m	struct:Flow_TL
oldincludedir	Makefile	/^oldincludedir = \/usr\/include$/;"	m
p1	Makefile	/^	  p1=`echo $$p|sed 's\/$(EXEEXT)$$\/\/'`; \\$/;"	m
parms	fprobe-ulog.c	/^static struct getopt_parms parms[] = {$/;"	v	file:
peer	fprobe-ulog.c	/^	struct sockaddr_nl peer;$/;"	m	struct:ipulog_handle	file:
peer	fprobe-ulog.h	/^struct peer {$/;"	s
peers	fprobe-ulog.c	/^static struct peer *peers;$/;"	v	file:
pending_head	fprobe-ulog.c	/^static struct Flow *pending_head, *pending_tail;$/;"	v	file:
pending_queue_length	fprobe-ulog.c	/^static unsigned pending_queue_length = 100;$/;"	v	file:
pending_queue_trace	fprobe-ulog.c	/^static unsigned pending_queue_trace, pending_queue_trace_candidate;$/;"	v	file:
pending_queue_trace_candidate	fprobe-ulog.c	/^static unsigned pending_queue_trace, pending_queue_trace_candidate;$/;"	v	file:
pending_tail	fprobe-ulog.c	/^static struct Flow *pending_head, *pending_tail;$/;"	v	file:
pid	fprobe-ulog.c	/^static pid_t pid;$/;"	v	file:
pidfile	fprobe-ulog.c	/^static FILE *pidfile;$/;"	v	file:
pidfilepath	fprobe-ulog.c	/^static char *pidfilepath;$/;"	v	file:
pkgdatadir	Makefile	/^pkgdatadir = $(datadir)\/fprobe-ulog$/;"	m
pkgincludedir	Makefile	/^pkgincludedir = $(includedir)\/fprobe-ulog$/;"	m
pkglibdir	Makefile	/^pkglibdir = $(libdir)\/fprobe-ulog$/;"	m
pkts	fprobe-ulog.h	/^	unsigned long pkts;$/;"	m	struct:Flow
pkts_ignored	fprobe-ulog.c	/^static unsigned pkts_ignored, pkts_lost_capture, pkts_lost_unpending;$/;"	v	file:
pkts_lost_capture	fprobe-ulog.c	/^static unsigned pkts_ignored, pkts_lost_capture, pkts_lost_unpending;$/;"	v	file:
pkts_lost_unpending	fprobe-ulog.c	/^static unsigned pkts_ignored, pkts_lost_capture, pkts_lost_unpending;$/;"	v	file:
pkts_pending	fprobe-ulog.c	/^static unsigned pkts_pending, pkts_pending_done;$/;"	v	file:
pkts_pending_done	fprobe-ulog.c	/^static unsigned pkts_pending, pkts_pending_done;$/;"	v	file:
pkts_total	fprobe-ulog.c	/^static unsigned pkts_total, pkts_total_fragmented;$/;"	v	file:
pkts_total_fragmented	fprobe-ulog.c	/^static unsigned pkts_total, pkts_total_fragmented;$/;"	v	file:
prefix	Makefile	/^prefix = \/usr\/local$/;"	m
program_transform_name	Makefile	/^program_transform_name = s,x,x,$/;"	m
proto	fprobe-ulog.h	/^	uint8_t proto;$/;"	m	struct:Flow
proto	fprobe-ulog.h	/^	uint8_t proto;$/;"	m	struct:Flow_F
proto	fprobe-ulog.h	/^	uint8_t proto;$/;"	m	struct:Flow_TL
put_into	fprobe-ulog.c	/^int put_into(struct Flow *flow, int flag$/;"	f
pw	fprobe-ulog.c	/^static struct passwd *pw = 0;$/;"	v	file:
qflag	fprobe-ulog.c	/^	qflag,$/;"	e	file:
rev	Makefile	/^	    rev="$$subdir $$rev"; \\$/;"	m
rev	Makefile	/^	rev="$$rev ."; \\$/;"	m
rev	Makefile	/^	rev=''; for subdir in $$list; do \\$/;"	m
rflag	fprobe-ulog.c	/^	rflag,$/;"	e	file:
root	mem.c	/^static struct Mem *root;$/;"	v	file:
sbinPROGRAMS_INSTALL	Makefile	/^sbinPROGRAMS_INSTALL = $(INSTALL_PROGRAM)$/;"	m
sbin_PROGRAMS	Makefile	/^sbin_PROGRAMS = fprobe-ulog$(EXEEXT)$/;"	m
sbindir	Makefile	/^sbindir = ${exec_prefix}\/sbin$/;"	m
scan_cond	fprobe-ulog.c	/^static pthread_cond_t scan_cond = PTHREAD_COND_INITIALIZER;$/;"	v	file:
scan_frag_dreg	fprobe-ulog.c	/^static struct Flow *scan_frag_dreg;$/;"	v	file:
scan_interval	fprobe-ulog.c	/^static unsigned scan_interval = 5;$/;"	v	file:
scan_mutex	fprobe-ulog.c	/^static pthread_mutex_t scan_mutex = PTHREAD_MUTEX_INITIALIZER;$/;"	v	file:
scan_thread	fprobe-ulog.c	/^void *scan_thread()$/;"	f
sched_max	fprobe-ulog.c	/^static int sched_min, sched_max;$/;"	v	file:
sched_min	fprobe-ulog.c	/^static int sched_min, sched_max;$/;"	v	file:
schedp	fprobe-ulog.c	/^static struct sched_param schedp;$/;"	v	file:
sec	fprobe-ulog.h	/^	time_t sec;$/;"	m	struct:Time
seq	fprobe-ulog.h	/^	uint32_t seq;$/;"	m	struct:peer
setuser	fprobe-ulog.c	/^void setuser() {$/;"	f
sflag	fprobe-ulog.c	/^	sflag,$/;"	e	file:
sharedstatedir	Makefile	/^sharedstatedir = ${prefix}\/com$/;"	m
shuffle_table	hash.c	/^static uint8_t shuffle_table[256];$/;"	v	file:
sig_mask	fprobe-ulog.c	/^static sigset_t sig_mask;$/;"	v	file:
sighandler	fprobe-ulog.c	/^void sighandler(int sig)$/;"	f
sigs	fprobe-ulog.c	/^static int sigs;$/;"	v	file:
sip	fprobe-ulog.h	/^	struct in_addr sip;$/;"	m	struct:Flow
sip	fprobe-ulog.h	/^	struct in_addr sip;$/;"	m	struct:Flow_F
sip	fprobe-ulog.h	/^	struct in_addr sip;$/;"	m	struct:Flow_TL
size	fprobe-ulog.h	/^	unsigned long size;$/;"	m	struct:Flow
sizeF	fprobe-ulog.h	/^	unsigned long sizeF;$/;"	m	struct:Flow
sizeP	fprobe-ulog.h	/^	unsigned long sizeP;$/;"	m	struct:Flow
size_total	fprobe-ulog.c	/^static uint64_t size_total;$/;"	v	file:
snmp_index	fprobe-ulog.c	/^uint16_t snmp_index(char *name) {$/;"	f
snmp_rule	fprobe-ulog.h	/^struct snmp_rule {$/;"	s
snmp_rule_t	fprobe-ulog.h	/^} snmp_rule_t;$/;"	v
snmp_rules	fprobe-ulog.c	/^static struct snmp_rule *snmp_rules;$/;"	v	file:
sock	fprobe-ulog.h	/^	int sock;$/;"	m	struct:peer
sockbufsize	fprobe-ulog.c	/^static int sockbufsize;$/;"	v	file:
sp	fprobe-ulog.h	/^	uint16_t sp;$/;"	m	struct:Flow
sp	fprobe-ulog.h	/^	uint16_t sp;$/;"	m	struct:Flow_TL
srcdir	Makefile	/^srcdir = .$/;"	m
start_time	fprobe-ulog.c	/^static struct Time start_time;$/;"	v	file:
start_time_offset	fprobe-ulog.c	/^static long start_time_offset;$/;"	v	file:
subdir	Makefile	/^subdir = src$/;"	m
sysconfdir	Makefile	/^sysconfdir = ${prefix}\/etc$/;"	m
tags	Makefile	/^	      tags="$$tags $$include_option=$$here\/$$subdir\/TAGS"; \\$/;"	m
tags	Makefile	/^	tags=; \\$/;"	m
target	Makefile	/^	target=`echo $@ | sed s\/-recursive\/\/`; \\$/;"	m
target	Makefile	/^target = i686-pc-linux-gnu$/;"	m
target_alias	Makefile	/^target_alias = $/;"	m
target_cpu	Makefile	/^target_cpu = i686$/;"	m
target_os	Makefile	/^target_os = linux-gnu$/;"	m
target_triplet	Makefile	/^target_triplet = i686-pc-linux-gnu$/;"	m
target_vendor	Makefile	/^target_vendor = pc$/;"	m
tcp_flags	fprobe-ulog.h	/^	uint8_t tcp_flags;$/;"	m	struct:Flow
tflag	fprobe-ulog.c	/^	tflag,$/;"	e	file:
thid	fprobe-ulog.c	/^static pthread_t thid;$/;"	v	file:
top_builddir	Makefile	/^top_builddir = ..$/;"	m
top_distdir	Makefile	/^	        top_distdir="$$top_distdir" \\$/;"	m
top_distdir	Makefile	/^	    top_distdir=`$(am__cd) $(top_distdir) && pwd`; \\$/;"	m
top_srcdir	Makefile	/^top_srcdir = ..$/;"	m
topsrcdirstrip	Makefile	/^	topsrcdirstrip=`echo "$(top_srcdir)" | sed 's|.|.|g'`; \\$/;"	m
tos	fprobe-ulog.h	/^	uint8_t tos;$/;"	m	struct:Flow
total_elements	mem.c	/^unsigned int total_elements;$/;"	v
total_memory	mem.c	/^unsigned int total_memory;$/;"	v
transform	Makefile	/^transform = $(program_transform_name)$/;"	m
type	fprobe-ulog.h	/^	int type;$/;"	m	struct:peer
uflag	fprobe-ulog.c	/^	uflag,$/;"	e	file:
uint16_t	my_inttypes.h	/^typedef unsigned short uint16_t;$/;"	t
uint32_t	my_inttypes.h	/^typedef unsigned int uint32_t;$/;"	t
uint32_t	my_inttypes.h	/^typedef unsigned long uint32_t;$/;"	t
uint64_t	my_inttypes.h	/^typedef unsigned long long uint64_t;$/;"	t
uint64_t	my_inttypes.h	/^typedef unsigned long uint64_t;$/;"	t
uint8_t	my_inttypes.h	/^typedef unsigned char uint8_t;$/;"	t
ulog_gmask	fprobe-ulog.c	/^static uint32_t ulog_gmask = 1;$/;"	v	file:
ulog_handle	fprobe-ulog.c	/^static struct ipulog_handle *ulog_handle;$/;"	v	file:
unique	Makefile	/^	  test -n "$$unique" || unique=$$empty_fix; \\$/;"	m
unique	Makefile	/^	unique=`for i in $$list; do \\$/;"	m
unpending_cond	fprobe-ulog.c	/^static pthread_cond_t unpending_cond = PTHREAD_COND_INITIALIZER;$/;"	v	file:
unpending_mutex	fprobe-ulog.c	/^static pthread_mutex_t unpending_mutex = PTHREAD_MUTEX_INITIALIZER;$/;"	v	file:
unpending_thread	fprobe-ulog.c	/^void *unpending_thread()$/;"	f
unpending_timeout	fprobe-ulog.c	/^static int emit_timeout = EMIT_TIMEOUT, unpending_timeout = UNPENDING_TIMEOUT;$/;"	v	file:
usage	fprobe-ulog.c	/^void usage()$/;"	f
usec	fprobe-ulog.h	/^	long usec;$/;"	m	struct:Time
verbosity	fprobe-ulog.c	/^static unsigned verbosity = 6;$/;"	v	file:
vflag	fprobe-ulog.c	/^	vflag,$/;"	e	file:
